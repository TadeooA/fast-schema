import { Schema } from '../base/schema';
export declare const StringFormats: {
    ipv4: RegExp;
    ipv6: RegExp;
    mac: RegExp;
    email: RegExp;
    uuid: RegExp;
    jwt: RegExp;
    base64: RegExp;
    hex: RegExp;
    nanoid: RegExp;
    cuid: RegExp;
    cuid2: RegExp;
    ulid: RegExp;
    creditCard: RegExp;
    iban: RegExp;
    phone: RegExp;
    color: RegExp;
    rgb: RegExp;
    rgba: RegExp;
    slug: RegExp;
    iso8601: RegExp;
    time24: RegExp;
    time12: RegExp;
};
export declare class AdvancedStringSchema extends Schema<string> {
    private format?;
    private customPattern?;
    private minLength?;
    private maxLength?;
    constructor();
    _validate(data: unknown): string;
    min(length: number): this;
    max(length: number): this;
    length(length: number): this;
    ipv4(): this;
    ipv6(): this;
    mac(): this;
    jwt(): this;
    base64(): this;
    hex(): this;
    email(): this;
    uuid(): this;
    creditCard(): this;
    phone(): this;
    color(): this;
    slug(): this;
    iso8601(): this;
    regex(pattern: RegExp): this;
    nonempty(): this;
    startsWith(prefix: string): import("../base/schema").RefinementSchema<string>;
    endsWith(suffix: string): import("../base/schema").RefinementSchema<string>;
    includes(substring: string): import("../base/schema").RefinementSchema<string>;
}
//# sourceMappingURL=formats.d.ts.map